snippet	stoggle
	${1:obj}.slideToggle('${2:slow/400/fast}')${3}
snippet	wrap
	${1:obj}.wrap('${2:&lt;div class="extra-wrapper"&gt;&lt;/div&gt;}')${3}
snippet	sup
	${1:obj}.slideUp('${2:slow/400/fast}')${3}
snippet	height
	${1:obj}.height(${2:integer})${3}
snippet	loadif
	<+obj+>.loadIfModified('<+/path/to/file.htm+>', { <+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+> }, function() {
		<+// Stuff to do after the page is loaded+>
	});
snippet	sdownc
	${1:obj}.slideDown('${2:slow/400/fast}', function() {
		${3://Stuff to do *after* the animation takes place};
	});
snippet	children
	${1:obj}.children('${2:selector expression}')${3}
snippet	insertBefore
	${1:obj}.insertBefore('${2:selector expression}')${3}
snippet	togclass
	${1:obj}.toggleClass('${2:class name}')${3}
snippet	resize
	${1:obj}.resize(function() {
		${2:// Act on the event}
	});
snippet	prev
	${1:obj}.prev('${2:selector expression}')${3}
snippet	dblclick
	${1:obj}.dblclick(function() {
		${2:// Act on the event}
	});
snippet	getjson
	$.getJSON('<+/path/to/file.cgi+>',{
	 <+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+>},
	 function(json){
		<+//stuff to do after event occurs;+>
	});
snippet	clone
	${1:obj}.clone()${2}
snippet	load
	${1:obj}.load(function() {
		${2:// Act on the event}
	});
snippet	trig
	${1:obj}.trigger('${2:event name}')${3}
snippet	add
	${1:obj}.add('${2:selector expression}')${3}
snippet	is
	${1:obj}.is('${2:selector expression}')${3}
snippet	contains
	${1:obj}.contains('${2:text to find}')${3}
snippet	ajaxpost
	$.post('<+/path/to/file.cgi+>',{
	 <+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+>},
	 function(){
		<+//stuff to do after event occurs;+>
	});
snippet	mup
	${1:obj}.mouseup(function() {
		${2:// Act on the event}
	});
snippet	show
	${1:obj}.show('${2:slow/400/fast}')${3}
snippet	el
	$('${1}')${2:}
snippet	getscript
	$.getScript('${1:somescript.js}', function(){
		${2://optional stuff to do after getScript;}
	});
snippet	removeclass
	${1:obj}.removeClass('${2:class name}')${3}
snippet	hover
	${1:obj}.hover(function() {
		${2:// Stuff to do when the mouse enters the element;}
	}, function() {
		${3:// Stuff to do when the mouse leaves the element;}
	});${4}
snippet	fadeoutc
	${1:obj}.fadeOut('slow/400/fast', function() {
		${2://Stuff to do *after* the animation takes place};
	});
snippet	fadeinc
	${1:obj}.fadeIn('slow/400/fast', function() {
		${2://Stuff to do *after* the animation takes place};
	});
snippet	ajaxerror
	.ajaxError(function(${1:request, settings}) {
		${2://stuff to do when an AJAX call returns an error};
	});
	${3}
snippet	sdupc
	${1:obj}.slideUp('${2:slow/400/fast}', function() {
		${3://Stuff to do *after* the animation takes place};
	});
snippet	ajaxsend
	.ajaxSend(function(${1:request, settings}) {
		${2://stuff to do when an AJAX call returns an error};
	});
	${3}
snippet	showc
	${1:obj}.show('${2:slow/400/fast}', function() {
		${3://Stuff to do *after* the animation takes place}
	});
snippet	hidec
	${1:obj}.hide('${2:slow/400/fast}', function() {
		${3://Stuff to do *after* the animation takes place}
	});
snippet	sdown
	${1:obj}.slideDown('${2:slow/400/fast}')${3}
snippet	loadf
	<+obj+>.load('<+/path/to/file.htm+>', { <+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+> }, function() {
		<+// Stuff to do after the page is loaded+>
	});
snippet	animate
	${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})${4}
snippet	sib
	${1:obj}.siblings('${2:selector expression}')${3}
snippet	prepend
	${1:obj}.prepend('${2:Some text <b>and bold!</b>}')${3}
snippet	select
	${1:obj}.select(function() {
		${2:// Act on the event}
	});
snippet	end
	${1:obj}.end()${2}
snippet	ajaxsuccess
	$.ajaxSuccess(function() {
	  ${1://stuff to do when an AJAX call is started and no other AJAX calls are in progress};
	});
	${2}
snippet	reset
	${1:obj}.reset(function() {
		${2:// Act on the event}
	});
snippet	val
	${1:obj}.val('${2:text}')${3}
snippet	ajaxsetup
	$.ajaxSetup({
		url: "${1:mydomain.com/url}",
		type: "${2:POST}",
		dataType: "${3:xml/html/script/json}",
		data: $.param( $("${4:Element or Expression}") ),

		complete: function() {
			${5://called when complete}
		},

		success: function() {
			${6://called when successful}
		},

		error: function() {
			${7://called when there is an error}
		},
	});
snippet	insertAfter
	${1:obj}.insertAfter('${2:selector expression}')${3}
snippet	width
	${1:obj}.width(${2:integer})${3}
snippet	submit
	${1:obj}.submit(function() {
		${2:// Act on the event once}
	});
snippet	not
	${1:obj}.not('${2:selector expression}')${3}
snippet	ajaxstop
	$.ajaxStop(function() {
		${1://stuff to do when an AJAX call is started and no other AJAX calls are in progress};
	});
	${2}
snippet	next
	${1:obj}.next('${2:selector expression}')${3}
snippet	ajaxget
	$.get('${1:/test/ajax-test.xml}', function(xml){
		${2:alert( ("title",xml).text() ) //optional stuff to do after get;}
	});
snippet	one
	${1:obj}.one('${2:event name}', function(${3:event}) {
		${4:// Act on the event once}
	});
snippet	togsh
	${1:obj}.toggle('${2:slow/400/fast}')${3}
snippet	ajaxstart
	$.ajaxStart(function() {
		${1://stuff to do when an AJAX call is started and no other AJAX calls are in progress};
	});
	${2}
snippet	eltrim
	$.trim('${1:string}')${2}
snippet	after
	${1:obj}.after('${2:Some text <b>and bold!</b>}')${3}
snippet	error
	${1:obj}.error(function() {
		${2:// Act on the event}
	});
snippet	fadeout
	${1:obj}.fadeOut('${2:slow/400/fast}')${3}
snippet	filter
	${1:obj}.filter('${2:selector expression}')${3}
snippet	bind
	${1:obj}.bind('${2:event name}', function(${3:event}) {
		${4:// Act on the event}
	});
snippet	fadein
	${1:obj}.fadeIn('${2:slow/400/fast}')${3}
snippet	attrm
	${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})${6}
snippet	css
	${1:obj}.css('${2:attribute}', '${3:value}')${4}
snippet	appendTo
	${1:obj}.appendTo('${2:selector expression}')${3}
snippet	ajaxgetif
	$.getIfModified('${1:/test/test.cgi}', function(data){
		${2:alert( "Data loaded: " + data ) //optional stuff to do after get;}
	});
snippet	unbind
	${1:obj}.unbind('${2:event name}')${3}
snippet	prependto
	${1:obj}.prependTo('${2:selector expression}')${3}
snippet	parents
	${1:obj}.parents('${2:selector expression}')${3}
snippet	scroll
	${1:obj}.scroll(function() {
		${2:// Act on the event}
	});
snippet	removeattr
	${1:obj}.removeAttr('${2:attribute name}')${3}
snippet	fadetoc
	${1:obj}.fadeTo('slow/400/fast', ${2:0.5}, function() {
		${3://Stuff to do *after* the animation takes place};
	});
snippet	fadeto
	${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})${4}
snippet	get
	${1:obj}.get(${2:element index})${3}
snippet	parent
	${1:obj}.parent('${2:selector expression}')${3}
snippet	size
	${1:obj}.size()${2}
snippet	cssm
	${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})${6}
